// Kimde sÄ±ra? "top" veya "bottom"
let currentTurn = "bottom"; // ilk seninle baÅŸlÄ±yor

const cards = [
  { image: "assets/1.png", question: "Seni en Ã§ok rahatlatan ÅŸey nedir mesela? Sessizlik mi, konuÅŸmak mÄ±?" },
  { image: "assets/2.png", question: "KÄ±zgÄ±n olduÄŸunda iÃ§ine mi atarsÄ±n, yoksa paylaÅŸÄ±p rahatlar mÄ±sÄ±n?" },
  { image: "assets/3.png", question: "Kendini nasÄ±l bir karakter olarak tanÄ±mlarsÄ±n, mesela daha Ã§ok planlÄ± biri misin yoksa anÄ± yaÅŸayan?" },
  { image: "assets/4.png", question: "Biri seni kÄ±rdÄ±ÄŸÄ±nda hemen belli eder misin, yoksa zamanla mÄ± soÄŸursun?" },
  { image: "assets/5.png", question: "Para konularÄ±nda tutumun nasÄ±ldÄ±r? Hesap kitap yapar mÄ±sÄ±n mesela?" },
  { image: "assets/6.png", question: "Bir aile kurmayÄ± hayal ettiÄŸinde gÃ¶zÃ¼nÃ¼n Ã¶nÃ¼ne nasÄ±l bir tablo geliyor?" },
  { image: "assets/7.png", question: "Sence iyi bir anne/baba olmak neyi gerektirir?" },
  { image: "assets/8.png", question: "Ã‡ocuklara nasÄ±l deÄŸerler kazandÄ±rmak istersin?" },
  { image: "assets/9.png", question: "Bir konuda rahatsÄ±z olduÄŸunda doÄŸrudan mÄ± sÃ¶ylersin, yoksa biraz zaman mÄ± geÃ§sin istersin?" },
  { image: "assets/10.png", question: "Sence tartÄ±ÅŸmalar, bir iliÅŸkiyi zedeler mi yoksa doÄŸru ÅŸekilde yapÄ±ldÄ±ÄŸÄ±nda geliÅŸtirici olabilir mi?" },
  { image: "assets/11.png", question: "Sessizlik mi yoksa konuÅŸarak Ã§Ã¶zÃ¼m bulmak mÄ± seni daha Ã§ok rahatlatÄ±r?" },
  { image: "assets/12.png", question: "Bir problem yaÅŸadÄ±ÄŸÄ±mÄ±zda, Ã§Ã¶zÃ¼m iÃ§in nasÄ±l bir yol izlemeyi tercih edersin? Hemen konuÅŸmak mÄ±, dÃ¼ÅŸÃ¼nmek mi?" },
  { image: "assets/13.png", question: "Sana gÃ¶re bir iliÅŸkide en Ã§ok ne eksik olursa arada uzaklÄ±k baÅŸlar?" },
  { image: "assets/14.png", question: "Biri seni yanlÄ±ÅŸ anladÄ±ÄŸÄ±nda genelde ne yaparsÄ±n? AÃ§Ä±klamaya Ã§alÄ±ÅŸÄ±r mÄ±sÄ±n yoksa 'anlamÄ±yorsa anlamasÄ±n' mÄ± dersin?" },
  { image: "assets/15.png", question: "Birlikte vakit geÃ§irmek deyince aklÄ±na ne gelir? Sence kaliteli zaman nasÄ±l olur?" },
  { image: "assets/16.png", question: "Kendini hangi zamanlarda daha enerjik hissedersin? Sabahlar mÄ±, akÅŸamlar mÄ± mesela?" },
  { image: "assets/17.png", question: "Yorucu bir gÃ¼nÃ¼n ardÄ±ndan kendini nasÄ±l toparlarsÄ±n? Dinlenme biÃ§imin nasÄ±l?" },
  { image: "assets/18.png", question: "Hangi ortamlar seni ruhen iyi hissettirir? KalabalÄ±k mÄ±, sessiz mi, doÄŸa mÄ±?" },
  { image: "assets/19.png", question: "Kendine dair en Ã§ok geliÅŸtirmek istediÄŸin yÃ¶n ne?" },
  { image: "assets/20.png", question: "Bazen iÃ§ine kapanmak istediÄŸin olur mu? BÃ¶yle zamanlarda yanÄ±nda birinin olmasÄ± mÄ± yoksa yalnÄ±z kalmak mÄ± iyi gelir?" }
];


let topStack = [...cards];
let bottomStack = [...cards];

// ElemanlarÄ± alalÄ±m
const topOptions = document.getElementById("top-options");
const bottomOptions = document.getElementById("bottom-options");
const topQuestion = document.getElementById("top-question");
const bottomQuestion = document.getElementById("bottom-question");
const nextTurnBtn = document.getElementById("next-turn");

function displayCards() {
  topOptions.innerHTML = "";
  bottomOptions.innerHTML = "";
  topQuestion.innerText = "";
  bottomQuestion.innerText = "";

  const currentStack = currentTurn === "top" ? topStack : bottomStack;
  const container = currentTurn === "top" ? topOptions : bottomOptions;

  // Kart yoksa sÄ±radaki kiÅŸiye geÃ§meden Ã¶nce uyarÄ± verilebilir
  if (currentStack.length < 2) {
    container.innerText = "Kart kalmadÄ± ğŸ’”";
    return;
  }

  // Rastgele 2 kart seÃ§
  const shuffled = currentStack.sort(() => 0.5 - Math.random());
  const selected = shuffled.slice(0, 2);

  selected.forEach(card => {
    const img = document.createElement("img");
    img.src = card.image;
    img.alt = "Soru KartÄ±";
    img.onclick = () => showQuestion(card, currentTurn);
    container.appendChild(img);
  });
}

function showQuestion(card, player) {
  const container = player === "top" ? topOptions : bottomOptions;
  const questionDiv = player === "top" ? topQuestion : bottomQuestion;

  questionDiv.innerText = card.question;

  // SeÃ§ilen kart dÄ±ÅŸÄ±nda hepsini temizle
  container.innerHTML = "";
  const img = document.createElement("img");
  img.src = card.image;
  img.alt = "SeÃ§ilen Kart";
  img.classList.add("selected");
  container.appendChild(img);

  // Kendi stack'inden sil
  if (player === "top") {
    topStack = topStack.filter(c => c !== card);
  } else {
    bottomStack = bottomStack.filter(c => c !== card);
  }
}

// SÄ±ra deÄŸiÅŸtir
nextTurnBtn.addEventListener("click", () => {
  currentTurn = currentTurn === "top" ? "bottom" : "top";
  displayCards();
});

// Ä°lk baÅŸlatma
displayCards();
